A51 MACRO ASSEMBLER  STARTUP_M5                                                           05/05/2023 13:31:19 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\STARTUP_M5.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE STARTUP_M5.A51 SET(LARGE) DEBUG PRINT(.\Listings\STARTUP_M5.lst) OBJECT
                      (.\Objects\STARTUP_M5.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.
                       5     ;  Version 8.01
                       6     ;
                       7     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       8     ;------------------------------------------------------------------------------
                       9     ;  STARTUP.A51:  This code is executed after processor reset.
                      10     ;
                      11     ;  To translate this file use A51 with the following invocation:
                      12     ;
                      13     ;     A51 STARTUP.A51
                      14     ;
                      15     ;  To link the modified STARTUP.OBJ file to your application use the following
                      16     ;  Lx51 invocation:
                      17     ;
                      18     ;     Lx51 your object file list, STARTUP.OBJ  controls
                      19     ;
                      20     ;------------------------------------------------------------------------------
                      21     ;
                      22     ;  User-defined <h> Power-On Initialization of Memory
                      23     ;
                      24     ;  With the following EQU statements the initialization of memory
                      25     ;  at processor reset can be defined:
                      26     ;
                      27     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      28     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      29     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0080                30     IDATALEN        EQU     80H
                      31     ;
                      32     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                      33     ;     <i> The absolute start address of XDATA memory
  8000                34     XDATASTART      EQU     8000H     
                      35     ;
                      36     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                      37     ;     <i> The length of XDATA memory in bytes.
  8000                38     XDATALEN        EQU     8000H
                      39     ;
                      40     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                      41     ;     <i> The absolute start address of PDATA memory
  0000                42     PDATASTART      EQU     0H
                      43     ;
                      44     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                      45     ;     <i> The length of PDATA memory in bytes.
  0000                46     PDATALEN        EQU     0H
                      47     ;
                      48     ;</h>
                      49     ;------------------------------------------------------------------------------
                      50     ;
                      51     ;<h> Reentrant Stack Initialization
                      52     ;
                      53     ;  The following EQU statements define the stack pointer for reentrant
                      54     ;  functions and initialized it:
                      55     ;
                      56     ; <h> Stack Space for reentrant functions in the SMALL model.
                      57     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
A51 MACRO ASSEMBLER  STARTUP_M5                                                           05/05/2023 13:31:19 PAGE     2

                      58     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                59     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      60     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      61     ;     <i> Set the top of the stack to the highest location.
  0100                62     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      63     ; </h>
                      64     ;
                      65     ; <h> Stack Space for reentrant functions in the LARGE model.      
                      66     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                      67     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000                68     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                      69     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                      70     ;     <i> Set the top of the stack to the highest location.
  0000                71     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                      72     ; </h>
                      73     ;
                      74     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                      75     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                      76     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000                77     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                      78     ;
                      79     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                      80     ;     <i> Set the top of the stack to the highest location.
  0100                81     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      82     ; </h>
                      83     ;</h>
                      84     ;------------------------------------------------------------------------------
                      85     ;
                      86     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                      87     ;  <e>Compact Model Page Definition
                      88     ;
                      89     ;  <i>Define the XDATA page used for PDATA variables. 
                      90     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                      91     ;
                      92     ; Enable pdata memory page initalization
  0000                93     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                      94     ;
                      95     ; <o> PPAGE number <0x0-0xFF> 
                      96     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  0000                97     PPAGE           EQU     0
                      98     ;
                      99     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF> 
                     100     ; <i> most 8051 variants use P2 as uppermost address byte
  00A0               101     PPAGE_SFR       DATA    0A0H
                     102     ;
                     103     ; </e>
                     104     ;------------------------------------------------------------------------------
                     105     
                     106     ; Standard SFR Symbols 
  00E0               107     ACC             DATA    0E0H
  00F0               108     B               DATA    0F0H
  0081               109     SP              DATA    81H
  0082               110     DPL             DATA    82H
  0083               111     DPH             DATA    83H
  008E               112     CKCON           DATA    8EH
  0093               113     DPC                     DATA    93H
  0094               114     DAGESEL         DATA    94H     
  0095               115     D_PAGESEL       DATA    95H
  00C8               116     T2CON           DATA    0C8H
  00C9               117     MUX_SEL         DATA    0C9H
  00F8               118     RAMMODE         DATA    0F8H
  00F9               119     PORTDRV     DATA    0F9H
  00A8               120     IEN0        DATA    0A8H
  00B8               121     IEN1        DATA    0B8H
  009A               122     IEN2        DATA    09AH
  00A9               123     IP0         DATA    0A9H
A51 MACRO ASSEMBLER  STARTUP_M5                                                           05/05/2023 13:31:19 PAGE     3

  00B9               124     IP1         DATA    0B9H
  00D0               125     PSW         DATA    0D0H
                     126     
                     127                 NAME    ?C_STARTUP
                     128     
                     129     
                     130     ?C_C51STARTUP   SEGMENT   CODE
                     131     ?STACK          SEGMENT   IDATA
                     132     
----                 133                     RSEG    ?STACK
0000                 134                     DS      1
                     135     
                     136                     EXTRN CODE (?C_START)
                     137                     PUBLIC  ?C_STARTUP
                     138     
----                 139                     CSEG    AT      0
0000 020000   F      140     ?C_STARTUP:     LJMP    STARTUP1
                     141     
----                 142                             CSEG    AT  0F8H
00F8 FFFF            143                             DB  0FFH,0FFH           ;º”√‹–¥ 00H 00H
00FA 4457494E        144                             DB  'DWINT5'
00FE 5435                    
                     145     
----                 146                 RSEG    ?C_C51STARTUP
                     147     
0000                 148     STARTUP1:       
                     149                     ;T5L ≥ı ºªØ±ÿ–Îµƒ¥˙¬Î
                     150                     ;MOV    DAGESEL,#01H   
                     151                     ;MOV    D_PAGESEL,#02H  
                     152                     ;MOV    CKCON,#00H
                     153                     ;MOV    DPC,#00H
                     154                     ;MOV    T2CON,#70H
                     155                     ;MOV    MUX_SEL,#60H    ;WDT OFF
                     156                     ;MOV    RAMMODE,#00H    ; Õ∑≈APP RAM    
                     157     
                     158     
                     159     ;“ª, ‘⁄ startup.a51÷–ÃÌº”
0000 759401          160                       MOV   DAGESEL,  #01H                     ;64K¥˙¬Îø’º‰ 
0003 759502          161                       MOV   D_PAGESEL,#02H                     ;32K xdata ø’º‰ 0x8000 -0xffff 
0006 758E00          162                       MOV   CKCON,    #00H                     ;cpu‘À––‘⁄1Tƒ£ Ω
0009 759300          163                       MOV   DPC,      #00H                     ;±Í◊ºƒ£ Ω,–Ë“™÷∏¡Ó≤Ÿ◊˜xdata µƒ d
                             ptr µƒ‘ˆºı
000C 75C870          164                       MOV   T2CON,    #70H                     ;T2 ◊‘∂ØÃÓ◊∞
                     165                       ;MOV  MUX_SEL,  #00H                     ;WDT OFF,
000F 75C960          166                       MOV   MUX_SEL,  #60H                     ;WDT OFF,Uart2“≥ˆP04,P05  Uart3“
                             ≥ˆP06,P07
0012 75F800          167                       MOV   RAMMODE,  #00H 
0015 75F901          168                       MOV   PORTDRV,  #01H
0018 75A800          169                   MOV       IEN0,     #00H
001B 75B800          170                       MOV   IEN1,     #00H
001E 759A00          171                       MOV   IEN2,     #00H
0021 75A900          172                       MOV   IP0,      #00H
0024 75B900          173                       MOV   IP1,      #00H
0027 53D0E7          174                       ANL   PSW,      #0E7H
                     175                     ;±ÿ–Î‘⁄ startup.a51÷–µ⁄“ªÃıMOVX ÷∏¡Ó÷Æ«∞µƒ»Œ“‚Œª÷√.
                     176     
                     177     
                     178     
                     179     IF IDATALEN <> 0                  
002A 787F            180                     MOV     R0,#IDATALEN - 1
002C E4              181                     CLR     A
002D F6              182     IDATALOOP:      MOV     @R0,A
002E D8FD            183                     DJNZ    R0,IDATALOOP
                     184     ENDIF
                     185     
                     186     IF XDATALEN <> 0
A51 MACRO ASSEMBLER  STARTUP_M5                                                           05/05/2023 13:31:19 PAGE     4

0030 908000          187                     MOV     DPTR,#XDATASTART
0033 7F00            188                     MOV     R7,#LOW (XDATALEN)
                     189       IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                               ELSE
0035 7E80            192                     MOV     R6,#HIGH (XDATALEN)
                     193       ENDIF
0037 E4              194                     CLR     A
0038 F0              195     XDATALOOP:      MOVX    @DPTR,A
0039 A3              196                     INC     DPTR
003A DFFC            197                     DJNZ    R7,XDATALOOP
003C DEFA            198                     DJNZ    R6,XDATALOOP
                     199     ENDIF
                     200     
                     201     IF PPAGEENABLE <> 0
                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
                     204     
                     205     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     213     
                     214     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     219     
                     220     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     226     
                     227     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     231     
003E 758100   F      232                     MOV     SP,#?STACK-1
                     233     
                     234     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     235     ;<h> Code Banking
                     236     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     237     
                             
                             
                                             
                             
                     242     ;</h>
0041 020000   F      243                     LJMP    ?C_START
                     244     
                     245                     END
A51 MACRO ASSEMBLER  STARTUP_M5                                                           05/05/2023 13:31:19 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C_C51STARTUP. . .  C SEG    0044H       REL=UNIT
?C_START . . . . .  C ADDR   -----       EXT
?C_STARTUP . . . .  C ADDR   0000H   A   
?STACK . . . . . .  I SEG    0001H       REL=UNIT
ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CKCON. . . . . . .  D ADDR   008EH   A   
DAGESEL. . . . . .  D ADDR   0094H   A   
DPC. . . . . . . .  D ADDR   0093H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
D_PAGESEL. . . . .  D ADDR   0095H   A   
IBPSTACK . . . . .  N NUMB   0000H   A   
IBPSTACKTOP. . . .  N NUMB   0100H   A   
IDATALEN . . . . .  N NUMB   0080H   A   
IDATALOOP. . . . .  C ADDR   002DH   R   SEG=?C_C51STARTUP
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00B8H   A   
IEN2 . . . . . . .  D ADDR   009AH   A   
IP0. . . . . . . .  D ADDR   00A9H   A   
IP1. . . . . . . .  D ADDR   00B9H   A   
MUX_SEL. . . . . .  D ADDR   00C9H   A   
PBPSTACK . . . . .  N NUMB   0000H   A   
PBPSTACKTOP. . . .  N NUMB   0100H   A   
PDATALEN . . . . .  N NUMB   0000H   A   
PDATASTART . . . .  N NUMB   0000H   A   
PORTDRV. . . . . .  D ADDR   00F9H   A   
PPAGE. . . . . . .  N NUMB   0000H   A   
PPAGEENABLE. . . .  N NUMB   0000H   A   
PPAGE_SFR. . . . .  D ADDR   00A0H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMMODE. . . . . .  D ADDR   00F8H   A   
SP . . . . . . . .  D ADDR   0081H   A   
STARTUP1 . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
T2CON. . . . . . .  D ADDR   00C8H   A   
XBPSTACK . . . . .  N NUMB   0000H   A   
XBPSTACKTOP. . . .  N NUMB   0000H   A   
XDATALEN . . . . .  N NUMB   8000H   A   
XDATALOOP. . . . .  C ADDR   0038H   R   SEG=?C_C51STARTUP
XDATASTART . . . .  N NUMB   8000H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
