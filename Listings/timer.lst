C51 COMPILER V9.60.7.0   TIMER                                                             05/11/2023 11:48:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE driver\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver;.\source;.
                    -\lib) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(.\Objects\timer.obj)

line level    source

   1          /******************************************************************************
   2          
   3                            版权所有 (C), 2019, 北京迪文科技有限公司
   4          
   5           ******************************************************************************
   6            文 件 名   : timer.c
   7            版 本 号   : V1.0
   8            作    者   : chenmeishu
   9            生成日期   : 2019.9.2
  10            功能描述   : 实现了定时器    硬件定时器0    实现了8个软定时器
  11            修改历史   :
  12            1.日    期   : 
  13              作    者   : 
  14              修改内容   : 
  15          ******************************************************************************/
  16          #include "timer.h"
  17          
  18          //注意：禁止私自访问这些变量，只能用接口函数访问
  19          //u8  EnableTimer;   //8个软定时器是否使能
  20          //u8  OutTimeFlag;   //8个软定时器是否超时
  21          //u32 TimerTime[8];  //8个软定时器定时时间
  22          
  23          //注意：禁止私自访问这些变量，只能用接口函数访问
  24          u8 data EnableTimer;   //8个软定时器是否使能
  25          u8 data OutTimeFlag;   //8个软定时器是否超时
  26          u16 data TimerTime[8];  //8个软定时器定时时间
  27          u8 data SysTick;
  28          
  29          /*****************************************************************************
  30           函 数 名  : void T0_Init(void)
  31           功能描述  : 定时器0初始化      定时间隔1ms
  32           输入参数  :     
  33           输出参数  : 
  34           修改历史  :
  35            1.日    期   : 2019年9月2日
  36              作    者   :  陈美书
  37              修改内容   : 创建
  38          *****************************************************************************/
  39          //定时器时钟为系统时钟的12分频，最大能设定到3.8ms
  40          //计算公式为(65536-n*FOSC/12),其中n的单位为秒
  41          void T0_Init(void)
  42          {
  43   1                TMOD=0x11;          //16位定时器
  44   1          //T0
  45   1          TH0=0x00;
  46   1          TL0=0x00;
  47   1          TR0=0x00;
  48   1              
  49   1                OutTimeFlag=0;
  50   1                EnableTimer=0;
  51   1              
  52   1          TMOD|=0x01;
  53   1          TH0=T1MS>>8;        //1ms定时器
  54   1          TL0=T1MS;
C51 COMPILER V9.60.7.0   TIMER                                                             05/11/2023 11:48:26 PAGE 2   

  55   1          ET0=1;              //开启定时器0中断
  56   1      //    EA=1;               //开总中断
  57   1          TR0=1;              //开启定时器
  58   1      }
  59          /*****************************************************************************
  60           函 数 名  : void T0_ISR_PC(void)    interrupt 1
  61           功能描述  : 定时器0处理函数，毫秒增加
  62           输入参数  :     
  63           输出参数  : 
  64           修改历史  :
  65            1.日    期   : 2019年9月2日
  66              作    者   : 陈美书
  67              修改内容   : 创建
  68          *****************************************************************************/
  69          void T0_ISR_PC(void)    interrupt 1
  70          {
  71   1               u8 data i;
  72   1              
  73   1          EA=0;
  74   1          TH0=T1MS>>8;
  75   1          TL0=T1MS;
  76   1                      SysTick++;
  77   1                      for(i=0;i<8;i++)
  78   1                      {
  79   2                              if(EnableTimer&(0x01<<i))
  80   2                              {
  81   3                                      TimerTime[i]--;
  82   3                                      if(TimerTime[i]==0)
  83   3                                      {
  84   4                                              OutTimeFlag |= 0x01<<i;
  85   4                                              EnableTimer &= ~(0x01<<i);                                       
  86   4                                      }
  87   3                              }
  88   2                      }
  89   1          EA=1;
  90   1      }
  91          //定时器时钟为系统时钟的12分频，最大能设定到3.8ms
  92          //计算公式为(65536-n*FOSC/12),其中n的单位为秒
  93          void T1_Init(void)
  94          {
  95   1                TMOD=0x11;          //16位定时器
  96   1          //T1
  97   1          TH1=0x00;
  98   1          TL1=0x00;
  99   1          TR1=0x00;
 100   1              
 101   1          TMOD |= 0x10;
 102   1          TH1=T1MS>>8;        //1ms定时器
 103   1          TL1=T1MS;
 104   1          ET1=1;              //开启定时器0中断
 105   1          TR1=1;              //开启定时器
 106   1      }
 107          
 108          void timer1_Isr() interrupt 3
 109          {
 110   1              EA = 0;
 111   1              TH1=T1MS>>8;
 112   1        TL1=T1MS;
 113   1              P10 = !P10;
 114   1              EA = 1;
 115   1      }
 116          
C51 COMPILER V9.60.7.0   TIMER                                                             05/11/2023 11:48:26 PAGE 3   

 117          //定时器时钟为系统时钟的24分频，最大能设定到7.6ms
 118          //计算公式为(65536-n*FOSC/24),其中n的单位为秒
 119          void T2_Init(void)
 120          {
 121   1              T2CON = 0xF0;           //选择24分频
 122   1              
 123   1              TH2 = 0x58;
 124   1              TL2 = 0x00;
 125   1              TRL2H = 0x58;
 126   1              TRL2L = 0x00;           //定时5ms
 127   1              T2CON |= 0x01;  //启动定时器
 128   1              ET2 = 1;                          //打开定时器2中断             
 129   1      }
 130          
 131          void timer2_Isr() interrupt 5
 132          {
 133   1              EA = 0;
 134   1              TF2 = 0;
 135   1              P11 = !P11;
 136   1              EA = 1;
 137   1      }
 138          
 139          
 140          /*****************************************************************************
 141           函 数 名  : void StartTimer(u8 ID, u16 nTime)
 142           功能描述  : 启动一个软定时器，
 143           输入参数  :     u8 ID         定时器ID
 144                         u16 nTime     定时ms数
 145          
 146           输出参数  : 
 147           修改历史  :
 148            1.日    期   : 2019年9月2日
 149              作    者   : 陈美书
 150              修改内容   : 创建
 151          *****************************************************************************/
 152          void StartTimer(u8 ID, u16 nTime)
 153          {
 154   1                EA=0;
 155   1                EnableTimer=EnableTimer|(1<<ID);
 156   1                TimerTime[ID]=nTime;
 157   1                OutTimeFlag&=~(1<<ID);
 158   1                EA=1; 
 159   1      }
 160          
 161          
 162          /*****************************************************************************
 163           函 数 名  : void KillTimer(u8 ID)
 164           功能描述  : 停止一个软定时器，
 165           输入参数  :    u8 ID  定时器ID
 166           输出参数  : 
 167           修改历史  :
 168            1.日    期   : 2019年9月2日
 169              作    者   : 陈美书
 170              修改内容   : 创建
 171          *****************************************************************************/
 172          void KillTimer(u8 ID)
 173          {
 174   1                EA=0;
 175   1                EnableTimer&=~(1<<(ID));
 176   1                OutTimeFlag&=~(1<<ID);
 177   1                EA=1;
 178   1      }
C51 COMPILER V9.60.7.0   TIMER                                                             05/11/2023 11:48:26 PAGE 4   

 179          
 180          /*****************************************************************************
 181           函 数 名  : u8 GetTimeOutFlag(u8 ID)
 182           功能描述  : 获得定时器是否超时
 183           输入参数  :    u8 ID  定时器ID
 184           输出参数  :  0  未超时    非0  超时
 185           修改历史  :
 186            1.日    期   : 2019年9月2日
 187              作    者   : 陈美书
 188              修改内容   : 创建
 189          *****************************************************************************/
 190          u8 GetTimeOutFlag(u8 ID)
 191          {
 192   1        u8 flag;
 193   1              EA=0;
 194   1              flag=OutTimeFlag&(1<<ID);
 195   1              EA=1;
 196   1              return flag;
 197   1              
 198   1      }
 199          
 200          #ifdef PWMENABLE
              u8  EnablePWM;
              u16 PWMTotal[8];
              u16 PWMLow[8];
              u16 PWMTicks[8];
              u8  PWMPort[8];
              u8  PWMPin[8];
              
              void StartPWM(u8 PWMID, u16 VPWMTotal,u16 VPWMLow,u8 Port,u8 Pin )
              {
                        EA=0;
                        SetPinOut(Port,Pin);
                        PWMTicks[PWMID]=0;
                        PWMTotal[PWMID]=VPWMTotal;
                  PWMLow[PWMID]=VPWMLow;
                  PWMPort[PWMID]=Port;
                  PWMPin[PWMID]=Pin;  
                        EnablePWM|=(1<<PWMID);
                        EA=1;
              }
              
              void StopPWM(u8 PWMID)
              {
                        EA=0;
                        EnablePWM&=~(1<<PWMID);       
                        PinOutput(PWMPort[PWMID],PWMPin[PWMID],0);
                        EA=1;
              }
              
              void StopAllPWM()
              {
                       u8 i;
                       EnablePWM=0;
                       for(i=0;i<8;i++)
                      {
                              PinOutput(PWMPort[i],PWMPin[i],0);
                      }
              }
              #endif


C51 COMPILER V9.60.7.0   TIMER                                                             05/11/2023 11:48:26 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    281    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
